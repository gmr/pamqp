[metadata]
name = pamqp
version = attr: pamqp.__version__
description = RabbitMQ Focused AMQP low-level library
long_description = file: README.rst
long_description_content_type = text/x-rst; charset=UTF-8
license = BSD 3-Clause License
license-file = LICENSE
home-page = https://github.com/gmr/pamqp
project_urls =
    Bug Tracker = https://github.com/gmr/pamqp/issues
    Documentation = https://pamqp.readthedocs.io
    Source Code = https://github.com/gmr/pamqp/
author = Gavin M. Roy
author_email = gavinmroy@gmail.com
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    License :: OSI Approved :: BSD License
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3 :: Only
    Topic :: Communications
    Topic :: Internet
    Topic :: Software Development
    Typing :: Typed
requires-dist = setuptools
keywords =
    amqp
    rabbitmq

[options]
include_package_data = True
packages =
    pamqp
python_requires = >=3.7
zip_safe = true

[options.extras_require]
codegen =
    lxml
    requests
    yapf
testing =
    coverage
    flake8
    flake8-comprehensions
    flake8-deprecated
    flake8-import-order
    flake8-print
    flake8-quotes
    flake8-rst-docstrings
    flake8-tuple
    yapf

[bdist_wheel]
universal = 1

[build_sphinx]
all-files = 1

[coverage:run]
branch = True
command_line = -m unittest discover tests --verbose
data_file = build/.coverage

[coverage:report]
show_missing = True
include =
    pamqp/*
omit =
    tests/*.py

[coverage:html]
directory = build/coverage

[coverage:xml]
output = build/coverage.xml

[flake8]
application-import-names = pamqp
exclude = bak,build,docs,env,tools
import-order-style = google
ignore = RST306
rst-directives = deprecated
rst-roles = attr,class,const,data,exc,func,meth,mod,obj,py:class,py:mod
